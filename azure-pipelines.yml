trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotnetVersion: '6.0.300'      # Matches your global.json requirement
  webProjectPath: 'src/ContosoUniversity.WebApplication/ContosoUniversity.WebApplication.csproj'
  testUrl: 'http://localhost:5000' # Where UI tests will navigate to

steps:
# 1. Install required .NET SDK to avoid SDK mismatch errors
- task: UseDotNet@2
  displayName: 'Install .NET SDK $(dotnetVersion)'
  inputs:
    packageType: 'sdk'
    version: '$(dotnetVersion)'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# 2. Install NuGet client
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

# 3. Restore NuGet packages
- task: NuGetCommand@2
  displayName: 'Restore NuGet packages'
  inputs:
    restoreSolution: '$(solution)'

# 4. Build solution using MSBuild (for .NET Framework projects inside)
- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# 5. Run the web app in the background so Selenium/ChromeDriver can access it
- script: |
    echo "Starting web app in background..."
    dotnet run --project $(webProjectPath) --urls "$(testUrl)" &
    echo "Waiting 10 seconds to ensure the app is up..."
    sleep 10
  displayName: 'Start ContosoUniversity Web App'

# 6. Run all tests (unit + UI/Selenium)
- task: VSTest@2
  displayName: 'Run tests (including UI tests)'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# 7. Publish build artifacts
- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'